<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/cache
        http://www.springframework.org/schema/cache/spring-cache.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--- UseCases -->
    <!--- UseCases -> Friends -->
    <bean id="friendListGet" class="usecase.FriendListGet">
        <constructor-arg ref="friendRepository"/>
    </bean>
    <bean id="friendListAdd" class="usecase.FriendListAdd">
        <constructor-arg ref="friendRepository"/>
    </bean>

    <!--- UseCases -> Messages -->
    <bean id="messageSend" class="usecase.MessageSend">
        <constructor-arg ref="messageRepository"/>
    </bean>
    <bean id="messageListGet" class="usecase.MessageListGet">
        <constructor-arg ref="messageRepository"/>
    </bean>
    <bean id="messageListRankedGet" class="usecase.MessageListRankedGet">
        <constructor-arg ref="messageRepository"/>
    </bean>

    <!--- UseCases -> PublicMessages -->
    <bean id="messagePublicSend" class="usecase.MessagePublicSend">
        <constructor-arg ref="publicMessageRepository"/>
    </bean>
    <bean id="messagePublicListGet" class="usecase.MessagePublicListGet">
        <constructor-arg ref="publicMessageRepository"/>
    </bean>

    <!--- UseCases -> Users -->
    <bean id="userSignIn" class="usecase.UserSignIn">
        <constructor-arg ref="userRepository"/>
    </bean>
    <bean id="userSignUp" class="usecase.UserSignUp">
        <constructor-arg ref="userRepository"/>
    </bean>

    <!--- Repositories -->
    <bean id="messageRepository" class="repository.remote.MessageRepositoryImpl">
        <constructor-arg ref="messageDao"/>
    </bean>
    <bean id="publicMessageRepository" class="repository.remote.PublicMessageRepositoryImpl">
        <constructor-arg ref="publicMessageDao"/>
    </bean>
    <bean id="userRepository" class="repository.remote.UserRepositoryImpl">
        <constructor-arg ref="userDao"/>
    </bean>
    <bean id="friendRepository" class="repository.remote.FriendRepositoryImpl">
        <constructor-arg ref="friendDao"/>
    </bean>

    <!--- DAOs -->
    <bean id="messageDao" class="repository.remote.dao.MessageDaoSQL"/>
    <bean id="publicMessageDao" class="repository.remote.dao.PublicMessageDaoSQL"/>
    <bean id="userDao" class="repository.remote.dao.UserDaoSQL"/>
    <bean id="friendDao" class="repository.remote.dao.FriendDaoSQL"/>

    <!--- CacheManager -->
    <cache:annotation-driven />
    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="messages"/>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="public_messages"/>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="friends"/>
            </set>
        </property>
    </bean>

    <!-- Aspect -->
    <aop:aspectj-autoproxy />
    <bean id="logAspect" class="tool.LoggingAspect" />
    <aop:config>
        <aop:aspect id="aspectLogging" ref="logAspect" >

            <!-- @Around -->
            <aop:pointcut id="pointCutAround"
                          expression="execution(* *repository.remote.dao.*.*(..))" />

            <aop:around method="logging" pointcut-ref="pointCutAround" arg-names="proceedingJoinPoint" />
        </aop:aspect>
    </aop:config>
</beans>